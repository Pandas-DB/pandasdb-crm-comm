checkContent:
  handler: src/handlers/common/check_content.lambda_handler
  name: ${self:service}-${self:provider.stage}-check-content
  description: Check if WhatsApp message has content
  
getOrCreateLead:
  handler: src/handlers/common/get_or_create_lead.lambda_handler
  name: ${self:service}-${self:provider.stage}-get-or-create-lead
  description: Get existing lead or create new lead with contact method
  
checkLeadSpammer:
  handler: src/handlers/common/check_lead_spammer.lambda_handler
  name: ${self:service}-${self:provider.stage}-check-lead-spammer
  description: Check if lead is spammer based on activities
  
detectSpam:
  handler: src/handlers/common/detect_spam.lambda_handler
  name: ${self:service}-${self:provider.stage}-detect-spam
  description: AI-powered spam detection using Bedrock
  
createActivity:
  handler: src/handlers/common/create_activity.lambda_handler
  name: ${self:service}-${self:provider.stage}-create-activity
  description: Store inbound activity and activity content
  
generateResponse:
  handler: src/handlers/common/generate_response.lambda_handler
  name: ${self:service}-${self:provider.stage}-generate-response
  description: Generate AI responses for normal messages
  
generateSpamResponse:
  handler: src/handlers/common/generate_spam_response.lambda_handler
  name: ${self:service}-${self:provider.stage}-generate-spam-response
  description: Generate spam warning/blocking responses

sendMessage:
  handler: src/handlers/common/send_message.lambda_handler
  name: ${self:service}-${self:provider.stage}-send-message
  description: Send messages through various platforms (WhatsApp, Telegram, etc.)
  
whatsappWebhook:
  handler: src/handlers/phone/whatsapp_webhook.lambda_handler
  reservedConcurrency: 10
  name: ${self:service}-${self:provider.stage}-whatsapp-webhook
  description: Handle WhatsApp webhooks from Twilio
  events:
    - http:
        path: /whatsapp
        method: post
        cors: true

telegramWebhook:
  handler: src/handlers/phone/telegram_webhook.lambda_handler
  reservedConcurrency: 10
  name: ${self:service}-${self:provider.stage}-telegram-webhook
  description: Handle Telegram bot webhooks
  events:
    - http:
        path: /telegram
        method: post
        cors: true

chatApi:
  handler: src/handlers/api/chat_api.lambda_handler
  name: ${self:service}-${self:provider.stage}-chat-api
  description: Handle chat API requests with API key authentication
  events:
    - http:
        path: /chat
        method: post
        cors: true
        private: true

leadsApi:
  handler: src/handlers/api/leads_api.lambda_handler
  name: ${self:service}-${self:provider.stage}-leads-api
  description: Create and manage leads with contact methods
  events:
    - http:
        path: /api/leads
        method: post
        cors: true
        private: true
