#!/bin/bash

# Backoffice Deployment Script
set -e

STAGE=${1:-dev}
echo "üêº Deploying PandasDB CRM Backoffice - Stage: $STAGE"
echo "=================================================="

# Check if main stack exists
MAIN_STACK_NAME="pandasdb-crm-comm-$STAGE"
echo "üìã Checking if main stack exists: $MAIN_STACK_NAME"

aws cloudformation describe-stacks --stack-name $MAIN_STACK_NAME > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "‚ùå Main stack '$MAIN_STACK_NAME' not found!"
    echo "   Please deploy the main CRM stack first:"
    echo "   cd .. && npm run deploy:$STAGE"
    exit 1
fi

echo "‚úÖ Main stack found, proceeding with backoffice deployment"

# Deploy backoffice infrastructure
echo ""
echo "üèóÔ∏è Deploying backoffice infrastructure..."
npx serverless deploy --stage $STAGE

# Get deployment outputs
echo ""
echo "üì§ Getting deployment outputs..."
BACKOFFICE_BUCKET=$(aws cloudformation describe-stacks \
    --stack-name "pandasdb-crm-comm-backoffice-$STAGE" \
    --query 'Stacks[0].Outputs[?OutputKey==`BackofficeBucket`].OutputValue' \
    --output text)

BACKOFFICE_URL=$(aws cloudformation describe-stacks \
    --stack-name "pandasdb-crm-comm-backoffice-$STAGE" \
    --query 'Stacks[0].Outputs[?OutputKey==`BackofficeUrl`].OutputValue' \
    --output text)

DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
    --stack-name "pandasdb-crm-comm-backoffice-$STAGE" \
    --query 'Stacks[0].Outputs[?OutputKey==`BackofficeDistributionId`].OutputValue' \
    --output text)

API_URL=$(aws cloudformation describe-stacks \
    --stack-name "pandasdb-crm-comm-$STAGE" \
    --query 'Stacks[0].Outputs[?OutputKey==`BackofficeApiUrl`].OutputValue' \
    --output text)

echo "üìÅ S3 Bucket: $BACKOFFICE_BUCKET"
echo "üåç Backoffice URL: $BACKOFFICE_URL"
echo "üîó API URL: $API_URL"

# Update frontend config with API URL
echo ""
echo "‚öôÔ∏è Updating frontend configuration..."
sed -i.bak "s|https://your-api-gateway-id.execute-api.us-east-1.amazonaws.com/dev|$API_URL|g" frontend/script.js
rm frontend/script.js.bak 2>/dev/null || true

# Deploy frontend files
echo ""
echo "üìÅ Deploying frontend files to S3..."
aws s3 sync frontend/ s3://$BACKOFFICE_BUCKET --delete

# Invalidate CloudFront cache
echo ""
echo "üîÑ Invalidating CloudFront cache..."
aws cloudfront create-invalidation \
    --distribution-id $DISTRIBUTION_ID \
    --paths "/*" > /dev/null

echo ""
echo "üéâ Backoffice deployment completed successfully!"
echo "=============================================="
echo ""
echo "üìã Access Information:"
echo "üåç Backoffice URL: $BACKOFFICE_URL"
echo "üîó API Endpoint: $API_URL"
echo ""
echo "üìä Features Available:"
echo "‚Ä¢ Dashboard analytics and statistics"
echo "‚Ä¢ Lead lookup and conversation history"  
echo "‚Ä¢ Spam monitoring and user management"
echo "‚Ä¢ System health and performance metrics"
echo ""
echo "‚è∞ Note: CloudFront may take 5-15 minutes to fully propagate changes."

# Restore original script.js
echo ""
echo "üîÑ Restoring original frontend configuration..."
git checkout frontend/script.js 2>/dev/null || echo "‚ö†Ô∏è Could not restore script.js (not in git repo)"

echo ""
echo "‚ú® Backoffice deployment script completed!"
